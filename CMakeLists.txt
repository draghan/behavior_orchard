cmake_minimum_required(VERSION 3.17)
project(behavior_orchard)

set(CMAKE_CXX_STANDARD 17)

add_library(bt
        ./external/behavior_tree/behavior_system/BehaviorEmpty.cpp
        ./external/behavior_tree/behavior_system/IBehavior.cpp
        ./external/behavior_tree/behavior_system/tree/BehaviorTree.cpp
        ./external/behavior_tree/behavior_system/composite/BehaviorSelector.cpp
        ./external/behavior_tree/behavior_system/composite/BehaviorSequence.cpp
        ./external/behavior_tree/behavior_system/decorator/DecoratorInvert.cpp
        ./external/behavior_tree/behavior_system/decorator/DecoratorLink.cpp
        ./external/behavior_tree/behavior_system/decorator/DecoratorLoop.cpp
        ./external/behavior_tree/behavior_system/decorator/DecoratorMaxNTries.cpp
        ./external/behavior_tree/behavior_system/primitive/BehaviorAction.cpp
        ./external/behavior_tree/behavior_system/primitive/BehaviorCondition.cpp
        )

target_include_directories(bt PRIVATE
        ./external/behavior_tree/behavior_system/
        ./external/behavior_tree/behavior_system/tree
        ./external/behavior_tree/behavior_system/composite
        ./external/behavior_tree/behavior_system/decorator
        ./external/behavior_tree/behavior_system/primitive
        )

add_library(autogenerated_frames
        behavior_orchard/frames/Autogenerated.cpp)

set(SOURCE_FILES
        behavior_orchard/frames/MainFrame.cpp

        behavior_orchard/BehaviorOrchard.cpp
        behavior_orchard/main.cpp
        )

add_executable(behavior_orchard ${SOURCE_FILES})

target_include_directories(behavior_orchard PRIVATE
        external/behavior_tree/behavior_system/tree/)

find_package(wxWidgets COMPONENTS ribbon stc core base REQUIRED)
include("${wxWidgets_USE_FILE}")

# list of warnings from https://github.com/lefticus/cpp_starter_project/blob/master/cmake/CompilerWarnings.cmake
set(GCC_WARNINGS
        -Wall
        -Wextra # reasonable and standard
        -Wshadow # warn the user if a variable declaration shadows one from a
        # parent context
        -Wnon-virtual-dtor # warn the user if a class with virtual functions has a
        # non-virtual destructor. This helps catch hard to
        # track down memory errors
        -Wold-style-cast # warn for c-style casts
        -Wcast-align # warn for potential performance problem casts
        -Wunused # warn on anything being unused
        -Woverloaded-virtual # warn if you overload (not override) a virtual
        # function
        -Wpedantic # warn if non-standard C++ is used
        -Wconversion # warn on type conversions that may lose data
        -Wsign-conversion # warn on sign conversions
        -Wnull-dereference # warn if a null dereference is detected
        -Wdouble-promotion # warn if float is implicit promoted to double
        -Wformat=2 # warn on security issues around functions that format output
        # (ie printf)
        -Wmisleading-indentation # warn if identation implies blocks where blocks
        # do not exist
        -Wduplicated-cond # warn if if / else chain has duplicated conditions
        -Wduplicated-branches # warn if if / else branches have duplicated code
        -Wlogical-op # warn about logical operations being used where bitwise were
        # probably wanted
        -Wuseless-cast # warn if you perform a cast to the same type
        -Werror
        )

target_compile_options(behavior_orchard PRIVATE ${GCC_WARNINGS} -O3)
target_link_libraries(behavior_orchard bt autogenerated_frames ${wxWidgets_LIBRARIES} stdc++fs)

add_executable(tests
        ./behavior_orchard/tests/tests_main.cpp)

target_include_directories(tests PRIVATE
        external/Catch2/single_include/catch2)