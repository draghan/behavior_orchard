///////////////////////////////////////////////////////////////////////////
// C++ code generated with wxFormBuilder (version 3.9.0 Apr  5 2020)
// http://www.wxformbuilder.org/
//
// PLEASE DO *NOT* EDIT THIS FILE!
///////////////////////////////////////////////////////////////////////////

#include "Autogenerated.h"

///////////////////////////////////////////////////////////////////////////

GeneratedMainFrame::GeneratedMainFrame( wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style ) : wxFrame( parent, id, title, pos, size, style )
{
	this->SetSizeHints( wxSize( 800,700 ), wxDefaultSize );
	this->SetBackgroundColour( wxSystemSettings::GetColour( wxSYS_COLOUR_WINDOW ) );

	wxBoxSizer* main_sizer;
	main_sizer = new wxBoxSizer( wxVERTICAL );

	m_ribbonBar1 = new wxRibbonBar( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxRIBBON_BAR_DEFAULT_STYLE );
	m_ribbonBar1->SetArtProvider(new wxRibbonDefaultArtProvider);
	ribbon_page_general = new wxRibbonPage( m_ribbonBar1, wxID_ANY, wxT("General") , wxNullBitmap , 0 );
	ribbon_panel_file = new wxRibbonPanel( ribbon_page_general, wxID_ANY, wxT("File") , wxNullBitmap , wxDefaultPosition, wxDefaultSize, wxRIBBON_PANEL_DEFAULT_STYLE );
	m_ribbonButtonBar1 = new wxRibbonButtonBar( ribbon_panel_file, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0 );
	m_ribbonButtonBar1->AddButton( wxID_ANY, wxT("New Tree"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar1->AddButton( wxID_ANY, wxT("Open Tree"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar1->AddButton( wxID_ANY, wxT("Save Tree"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	ribbon_panel_misc = new wxRibbonPanel( ribbon_page_general, wxID_ANY, wxT("Misc") , wxNullBitmap , wxDefaultPosition, wxDefaultSize, wxRIBBON_PANEL_DEFAULT_STYLE );
	m_ribbonButtonBar6 = new wxRibbonButtonBar( ribbon_panel_misc, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0 );
	m_ribbonButtonBar6->AddToggleButton( wxID_ANY, wxT("Show Properties"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar6->AddButton( wxID_ANY, wxT("Generate Code"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	ribbon_page_nodes = new wxRibbonPage( m_ribbonBar1, wxID_ANY, wxT("Nodes") , wxNullBitmap , 0 );
	ribbon_panel_create = new wxRibbonPanel( ribbon_page_nodes, wxID_ANY, wxT("Create node") , wxNullBitmap , wxDefaultPosition, wxDefaultSize, wxRIBBON_PANEL_DEFAULT_STYLE );
	m_ribbonButtonBar21 = new wxRibbonButtonBar( ribbon_panel_create, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0 );
	m_ribbonButtonBar21->AddButton( wxID_ANY, wxT("New Selector"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar21->AddButton( wxID_ANY, wxT("New Sequence"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar21->AddButton( wxID_ANY, wxT("New Action"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar21->AddButton( wxID_ANY, wxT("New Condition"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar21->AddButton( wxID_ANY, wxT("New Link"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar21->AddButton( wxID_ANY, wxT("New Invert"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar21->AddButton( wxID_ANY, wxT("New Loop"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar21->AddButton( wxID_ANY, wxT("New MaxNTries"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	ribbon_panel_edit = new wxRibbonPanel( ribbon_page_nodes, wxID_ANY, wxT("Edit") , wxNullBitmap , wxDefaultPosition, wxDefaultSize, wxRIBBON_PANEL_DEFAULT_STYLE );
	m_ribbonButtonBar611 = new wxRibbonButtonBar( ribbon_panel_edit, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0 );
	m_ribbonButtonBar611->AddButton( wxID_ANY, wxT("Modify Node"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar611->AddButton( wxID_ANY, wxT("Delete Node"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	ribbon_panel_goto = new wxRibbonPanel( ribbon_page_nodes, wxID_ANY, wxT("Go to") , wxNullBitmap , wxDefaultPosition, wxDefaultSize, wxRIBBON_PANEL_DEFAULT_STYLE );
	m_ribbonButtonBar32 = new wxRibbonButtonBar( ribbon_panel_goto, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0 );
	m_ribbonButtonBar32->AddButton( wxID_ANY, wxT("Goto Parent"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar32->AddButton( wxID_ANY, wxT("Goto Newest"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar32->AddButton( wxID_ANY, wxT("Goto <"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar32->AddButton( wxID_ANY, wxT("Goto >"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar32->AddButton( wxID_ANY, wxT("Goto child <"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar32->AddButton( wxID_ANY, wxT("Goto child >"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	ribbon_panel_show = new wxRibbonPanel( ribbon_page_nodes, wxID_ANY, wxT("Show") , wxNullBitmap , wxDefaultPosition, wxDefaultSize, wxRIBBON_PANEL_DEFAULT_STYLE );
	m_ribbonButtonBar311 = new wxRibbonButtonBar( ribbon_panel_show, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0 );
	m_ribbonButtonBar311->AddButton( wxID_ANY, wxT("Show Parent"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar311->AddButton( wxID_ANY, wxT("Show Current"), wxBitmap( wxT("../resources/icons/temp0.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonButtonBar311->AddButton( wxID_ANY, wxT("Show Newest"), wxBitmap( wxT("../resources/icons/temp1.png"), wxBITMAP_TYPE_ANY ), wxEmptyString);
	m_ribbonBar1->Realize();

	main_sizer->Add( m_ribbonBar1, 0, wxALL|wxEXPAND, 5 );

	wxBoxSizer* workspace_outer_sizer;
	workspace_outer_sizer = new wxBoxSizer( wxHORIZONTAL );

	wxStaticBoxSizer* workspace_inner_sizer;
	workspace_inner_sizer = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, wxT("Workspace") ), wxVERTICAL );

	workspace = new wxScrolledWindow( workspace_inner_sizer->GetStaticBox(), wxID_ANY, wxDefaultPosition, wxDefaultSize, wxHSCROLL|wxVSCROLL );
	workspace->SetScrollRate( 5, 5 );
	workspace_inner_sizer->Add( workspace, 1, wxEXPAND | wxALL, 5 );


	workspace_outer_sizer->Add( workspace_inner_sizer, 5, wxEXPAND, 17 );

	wxBoxSizer* sizer_properties;
	sizer_properties = new wxBoxSizer( wxVERTICAL );

	wxStaticBoxSizer* sbSizer2;
	sbSizer2 = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, wxT("Node label") ), wxVERTICAL );

	m_textCtrl1 = new wxTextCtrl( sbSizer2->GetStaticBox(), wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
	sbSizer2->Add( m_textCtrl1, 0, wxALL|wxEXPAND, 5 );


	sizer_properties->Add( sbSizer2, 0, wxEXPAND, 5 );

	wxStaticBoxSizer* sbSizer4;
	sbSizer4 = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, wxT("Node ID") ), wxVERTICAL );

	m_textCtrl2 = new wxTextCtrl( sbSizer4->GetStaticBox(), wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
	sbSizer4->Add( m_textCtrl2, 0, wxALL|wxEXPAND, 5 );


	sizer_properties->Add( sbSizer4, 0, wxEXPAND, 5 );

	wxStaticBoxSizer* sbSizer5;
	sbSizer5 = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, wxT("Parent ID") ), wxVERTICAL );

	m_textCtrl3 = new wxTextCtrl( sbSizer5->GetStaticBox(), wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
	sbSizer5->Add( m_textCtrl3, 0, wxALL|wxEXPAND, 5 );


	sizer_properties->Add( sbSizer5, 0, wxEXPAND, 5 );

	wxStaticBoxSizer* sbSizer6;
	sbSizer6 = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, wxT("Node Type") ), wxVERTICAL );

	m_textCtrl4 = new wxTextCtrl( sbSizer6->GetStaticBox(), wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
	sbSizer6->Add( m_textCtrl4, 0, wxALL|wxEXPAND, 5 );


	sizer_properties->Add( sbSizer6, 0, wxEXPAND, 5 );

	wxStaticBoxSizer* sbSizer7;
	sbSizer7 = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, wxT("Number of Children") ), wxVERTICAL );

	m_textCtrl5 = new wxTextCtrl( sbSizer7->GetStaticBox(), wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
	sbSizer7->Add( m_textCtrl5, 0, wxALL|wxEXPAND, 5 );


	sizer_properties->Add( sbSizer7, 0, wxEXPAND, 5 );

	wxStaticBoxSizer* sbSizer8;
	sbSizer8 = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, wxT("Additional") ), wxVERTICAL );

	m_scintilla1 = new wxStyledTextCtrl( sbSizer8->GetStaticBox(), wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, wxEmptyString );
	m_scintilla1->SetUseTabs( true );
	m_scintilla1->SetTabWidth( 4 );
	m_scintilla1->SetIndent( 4 );
	m_scintilla1->SetTabIndents( true );
	m_scintilla1->SetBackSpaceUnIndents( true );
	m_scintilla1->SetViewEOL( false );
	m_scintilla1->SetViewWhiteSpace( false );
	m_scintilla1->SetMarginWidth( 2, 0 );
	m_scintilla1->SetIndentationGuides( true );
	m_scintilla1->SetMarginType( 1, wxSTC_MARGIN_SYMBOL );
	m_scintilla1->SetMarginMask( 1, wxSTC_MASK_FOLDERS );
	m_scintilla1->SetMarginWidth( 1, 16);
	m_scintilla1->SetMarginSensitive( 1, true );
	m_scintilla1->SetProperty( wxT("fold"), wxT("1") );
	m_scintilla1->SetFoldFlags( wxSTC_FOLDFLAG_LINEBEFORE_CONTRACTED | wxSTC_FOLDFLAG_LINEAFTER_CONTRACTED );
	m_scintilla1->SetMarginType( 0, wxSTC_MARGIN_NUMBER );
	m_scintilla1->SetMarginWidth( 0, m_scintilla1->TextWidth( wxSTC_STYLE_LINENUMBER, wxT("_99999") ) );
	m_scintilla1->MarkerDefine( wxSTC_MARKNUM_FOLDER, wxSTC_MARK_BOXPLUS );
	m_scintilla1->MarkerSetBackground( wxSTC_MARKNUM_FOLDER, wxColour( wxT("BLACK") ) );
	m_scintilla1->MarkerSetForeground( wxSTC_MARKNUM_FOLDER, wxColour( wxT("WHITE") ) );
	m_scintilla1->MarkerDefine( wxSTC_MARKNUM_FOLDEROPEN, wxSTC_MARK_BOXMINUS );
	m_scintilla1->MarkerSetBackground( wxSTC_MARKNUM_FOLDEROPEN, wxColour( wxT("BLACK") ) );
	m_scintilla1->MarkerSetForeground( wxSTC_MARKNUM_FOLDEROPEN, wxColour( wxT("WHITE") ) );
	m_scintilla1->MarkerDefine( wxSTC_MARKNUM_FOLDERSUB, wxSTC_MARK_EMPTY );
	m_scintilla1->MarkerDefine( wxSTC_MARKNUM_FOLDEREND, wxSTC_MARK_BOXPLUS );
	m_scintilla1->MarkerSetBackground( wxSTC_MARKNUM_FOLDEREND, wxColour( wxT("BLACK") ) );
	m_scintilla1->MarkerSetForeground( wxSTC_MARKNUM_FOLDEREND, wxColour( wxT("WHITE") ) );
	m_scintilla1->MarkerDefine( wxSTC_MARKNUM_FOLDEROPENMID, wxSTC_MARK_BOXMINUS );
	m_scintilla1->MarkerSetBackground( wxSTC_MARKNUM_FOLDEROPENMID, wxColour( wxT("BLACK") ) );
	m_scintilla1->MarkerSetForeground( wxSTC_MARKNUM_FOLDEROPENMID, wxColour( wxT("WHITE") ) );
	m_scintilla1->MarkerDefine( wxSTC_MARKNUM_FOLDERMIDTAIL, wxSTC_MARK_EMPTY );
	m_scintilla1->MarkerDefine( wxSTC_MARKNUM_FOLDERTAIL, wxSTC_MARK_EMPTY );
	m_scintilla1->SetSelBackground( true, wxSystemSettings::GetColour( wxSYS_COLOUR_HIGHLIGHT ) );
	m_scintilla1->SetSelForeground( true, wxSystemSettings::GetColour( wxSYS_COLOUR_HIGHLIGHTTEXT ) );
	sbSizer8->Add( m_scintilla1, 1, wxEXPAND | wxALL, 5 );


	sizer_properties->Add( sbSizer8, 1, wxEXPAND, 5 );


	workspace_outer_sizer->Add( sizer_properties, 1, wxEXPAND, 5 );


	main_sizer->Add( workspace_outer_sizer, 1, wxEXPAND, 5 );


	this->SetSizer( main_sizer );
	this->Layout();

	this->Centre( wxBOTH );

	// Connect Events
	this->Connect( wxEVT_CLOSE_WINDOW, wxCloseEventHandler( GeneratedMainFrame::MainFrameOnClose ) );
}

GeneratedMainFrame::~GeneratedMainFrame()
{
	// Disconnect Events
	this->Disconnect( wxEVT_CLOSE_WINDOW, wxCloseEventHandler( GeneratedMainFrame::MainFrameOnClose ) );

}
